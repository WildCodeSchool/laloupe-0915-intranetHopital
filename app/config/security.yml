# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        FOS\UserBundle\Model\UserInterface: sha512

    acl:
        connection: default

    ### Here we define all the CRUD Permissions as roles for SonataAdmin ###
    role_hierarchy:
        ROLE_SONATA_CHARTE_ADMIN:
            - ROLE_SONATA_CHARTE_LIST
            - ROLE_SONATA_CHARTE_VIEW
            - ROLE_SONATA_CHARTE_CREATE
            - ROLE_SONATA_CHARTE_EDIT
            - ROLE_SONATA_CHARTE_DELETE
            - ROLE_SONATA_CHARTE_EXPORT
            - ROLE_DASHBOARD

        ROLE_SONATA_USER_ADMIN_USER_ADMIN:
            - ROLE_SONATA_USER_ADMIN_USER_LIST
            - ROLE_SONATA_USER_ADMIN_USER_VIEW
            - ROLE_SONATA_USER_ADMIN_USER_CREATE
            - ROLE_SONATA_USER_ADMIN_USER_EDIT
            - ROLE_SONATA_USER_ADMIN_USER_DELETE
            - ROLE_SONATA_USER_ADMIN_USER_EXPORT
            - ROLE_DASHBOARD

        ROLE_SONATA_SERVICE_ADMIN:
            - ROLE_SONATA_SERVICE_LIST
            - ROLE_SONATA_SERVICE_VIEW
            - ROLE_SONATA_SERVICE_CREATE
            - ROLE_SONATA_SERVICE_EDIT
            - ROLE_SONATA_SERVICE_DELETE
            - ROLE_SONATA_SERVICE_EXPORT
            - ROLE_DASHBOARD

        ROLE_SONATA_FONCTION_ADMIN:
            - ROLE_SONATA_FONCTION_LIST
            - ROLE_SONATA_FONCTION_VIEW
            - ROLE_SONATA_FONCTION_CREATE
            - ROLE_SONATA_FONCTION_EDIT
            - ROLE_SONATA_FONCTION_DELETE
            - ROLE_SONATA_FONCTION_EXPORT
            - ROLE_DASHBOARD

        ROLE_SONATA_TENUE_ADMIN:
            - ROLE_SONATA_TENUE_LIST
            - ROLE_SONATA_TENUE_VIEW
            - ROLE_SONATA_TENUE_CREATE
            - ROLE_SONATA_TENUE_EDIT
            - ROLE_SONATA_TENUE_DELETE
            - ROLE_SONATA_TENUE_EXPORT
            - ROLE_DASHBOARD

        ### And settings up the globals roles ###
        ROLE_BLANCHISSERIE: [ROLE_SONATA_TENUE_ADMIN, ROLE_DASHBOARD]
        ROLE_RH:          [ROLE_SONATA_SERVICE_ADMIN, ROLE_SONATA_FONCTION_ADMIN, ROLE_SONATA_USER_ADMIN_USER_ADMIN, ROLE_DASHBOARD]
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_RH, ROLE_BLANCHISSERIE, ROLE_DASHBOARD]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
           - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented

    access_decision_manager:
            strategy: unanimous

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_manager
        in_memory:
            memory: ~

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true

        # -> end custom configuration

        # default login area for standard users

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                success_handler: redirect.after.login
                failure_path:   null
            logout:             true
            anonymous:          true

    ### Restriction acces to SonataAdmin for standard users ###
    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_DASHBOARD}

