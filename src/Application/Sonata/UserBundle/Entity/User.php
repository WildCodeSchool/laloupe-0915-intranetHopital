<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Sonata\UserBundle\Model\UserInterface;


/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */


class User extends BaseUser
{
    public function __construct()
    {
        parent::__construct();
        $this->enabled = true;
        $this->dateOfBirth = new \DateTime('1950-01-01');
        $this->code_copieur = str_pad(mt_rand(0,999999),4,'0',STR_PAD_LEFT);
        $password = $this->getPassword();
        if ($this->getService()) {
            $chef = $this->getService()->getChefService();
            if ($chef == $this) {
                return $this->chef_service = $this->getService();
            }
        }
    }

    public function __toString()
    {
        return (string) $this->username.' - '.$this->firstname.' '.$this->lastname;
    }

    public function setCreatedAtValue()
    {
        $this->plaintextPassword = $this->getPlainPassword();
    }

    public function setPlainPassword($password)
    {
        parent::setPlainPassword($password);
        $this->plaintextPassword = $password;
    }

    public function setLastLoginNull()
    {
        return $this->lastLogin = null;
    }

    /**
     * Returns the gender list
     *
     * @return array
     */
    public static function getGenderList()
    {
        return array(
            UserInterface::GENDER_UNKNOWN => 'gender_unknown',
            UserInterface::GENDER_FEMALE  => 'Madame',
            UserInterface::GENDER_MALE    => 'Monsieur',
        );
    }

    public function isChefService()
    {
        if ($this->getService()->getChefService() != null) {
            $chef = $this->getService()->getChefService();
            return ($chef->getId() == $this->getId());
        }
        else {
            return false;
        }
    }
    //GENERATED CODE
    /**
     * @var string
     */
    private $adresse;

    /**
     * @var string
     */
    private $zip;

    /**
     * @var string
     */
    private $ville;

    /**
     * @var \DateTime
     */
    private $date_entree;

    /**
     * @var \DateTime
     */
    private $date_sortie;

    /**
     * @var string
     */
    private $raison_sortie;

    /**
     * @var \IuchBundle\Entity\Photo
     */
    private $photo;

    /**
     * @var \IuchBundle\Entity\Fonction
     */
    private $fonction;

    /**
     * @var \IuchBundle\Entity\Service
     */
    private $service;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $services;

    /**
     * @var boolean
     */
    private $pointeur = false;


    /**
     * Set adresse
     *
     * @param string $adresse
     *
     * @return User
     */
    public function setAdresse($adresse)
    {
        $this->adresse = $adresse;

        return $this;
    }

    /**
     * Get adresse
     *
     * @return string
     */
    public function getAdresse()
    {
        return $this->adresse;
    }

    /**
     * Set zip
     *
     * @param string $zip
     *
     * @return User
     */
    public function setZip($zip)
    {
        $this->zip = $zip;

        return $this;
    }

    /**
     * Get zip
     *
     * @return string
     */
    public function getZip()
    {
        return $this->zip;
    }

    /**
     * Set ville
     *
     * @param string $ville
     *
     * @return User
     */
    public function setVille($ville)
    {
        $this->ville = $ville;

        return $this;
    }

    /**
     * Get ville
     *
     * @return string
     */
    public function getVille()
    {
        return $this->ville;
    }

    /**
     * Set date_Entree
     *
     * @param \DateTime $date_entree
     *
     * @return User
     */
    public function setDateEntree($date_entree)
    {
        $this->date_entree = $date_entree;

        return $this;
    }

    /**
     * Get date_entree
     *
     * @return \DateTime
     */
    public function getDateEntree()
    {
        return $this->date_entree;
    }

    /**
     * Set date_sortie
     *
     * @param \DateTime $date_sortie
     *
     * @return User
     */
    public function setDateSortie($date_sortie)
    {
        $this->date_sortie = $date_sortie;

        return $this;
    }

    /**
     * Get date_sortie
     *
     * @return \DateTime
     */
    public function getDateSortie()
    {
        return $this->date_sortie;
    }

    /**
     * Set raison_sortie
     *
     * @param string $raison_sortie
     *
     * @return User
     */
    public function setRaisonSortie($raison_sortie)
    {
        $this->raison_sortie = $raison_sortie;

        return $this;
    }

    /**
     * Get raison_sortie
     *
     * @return string
     */
    public function getRaisonSortie()
    {
        return $this->raison_sortie;
    }

    /**
     * Set photo
     *
     * @param \IuchBundle\Entity\Photo $photo
     *
     * @return User
     */
    public function setPhoto(\IuchBundle\Entity\Photo $photo = null)
    {
        $this->photo = $photo;

        return $this;
    }

    /**
     * Get photo
     *
     * @return \IuchBundle\Entity\Photo
     */
    public function getPhoto()
    {
        return $this->photo;
    }

    /**
     * Set fonction
     *
     * @param \IuchBundle\Entity\Fonction $fonction
     *
     * @return User
     */
    public function setFonction(\IuchBundle\Entity\Fonction $fonction)
    {
        $this->fonction = $fonction;

        return $this;
    }

    /**
     * Get fonction
     *
     * @return \IuchBundle\Entity\Fonction
     */
    public function getFonction()
    {
        return $this->fonction;
    }

    /**
     * Set service
     *
     * @param \IuchBundle\Entity\Service $service
     *
     * @return User
     */
    public function setService(\IuchBundle\Entity\Service $service)
    {
        $this->service = $service;

        return $this;
    }

    /**
     * Get service
     *
     * @return \IuchBundle\Entity\Service
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * Add service
     *
     * @param \IuchBundle\Entity\Service $service
     *
     * @return User
     */
    public function addService(\IuchBundle\Entity\Service $service)
    {
        $this->services[] = $service;

        return $this;
    }

    /**
     * Remove service
     *
     * @param \IuchBundle\Entity\Service $service
     */
    public function removeService(\IuchBundle\Entity\Service $service)
    {
        $this->services->removeElement($service);
    }

    /**
     * Get services
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getServices()
    {
        return $this->services;
    }


    /**
     * Set pointeur
     *
     * @param boolean $pointeur
     *
     * @return User
     */
    public function setPointeur($pointeur)
    {
        $this->pointeur = $pointeur;

        return $this;
    }

    /**
     * Get pointeur
     *
     * @return boolean
     */
    public function getPointeur()
    {
        return $this->pointeur;
    }
    /**
     * @var string
     */
    private $code_copieur;


    /**
     * Set codeCopieur
     *
     * @param string $codeCopieur
     *
     * @return User
     */
    public function setCodeCopieur($codeCopieur)
    {
        $this->code_copieur = $codeCopieur;

        return $this;
    }

    /**
     * Get codeCopieur
     *
     * @return string
     */
    public function getCodeCopieur()
    {
        return $this->code_copieur;
    }
    /**
     * @var string
     */

    protected  $plaintextPassword;
    /**
     * Set plaintextPassword
     *
     * @param string $plaintextPassword
     *
     * @return User
     */
    public function setPlaintextPassword($plaintextPassword)
    {
        $this->plaintextPassword = $plaintextPassword;

        return $this;
    }

    /**
     * Get plaintextPassword
     *
     * @return string
     */
    public function getPlaintextPassword()
    {
        return $this->plaintextPassword;
    }
}
